#PARSER PQL
#DEFINE STARTTS 10748401988186756
#DEFINE OUTPUT WORKSPACE*\TILB\Task1\
#DROPALLQUERIES
#QUERY

playtime = SELECT({predicate = 'timestamp > 10753295594424116 && timestamp < 14879639146403495 && (timestamp < 12557295594424116 || timestamp > 13086639146403495)'}, soccergame)

joinout = ENRICH({minimumSize = 42, PREDICATE = RelationalPredicate('sensorid = sid')},System.metadata, playtime)

firstResult = SELECT({predicate = 'entity = "Ball"'}, joinout)
ballInFieldX = SELECT({predicate = 'sens_x > -50 && sens_x < 52489'}, firstresult)
ballInFieldXY = SELECT({predicate = 'sens_y > -33939 && sens_y < 33965'}, ballInFieldX)

data = PROJECT({attributes = ['sensorid', 'timestamp']}, ballInFieldXY)

map_parameters_for_computation = STATEMAP({expressions = [['__last_1.sensorid', 'old_sensorid'], 'sensorid', ['timestamp - __last_1.timestamp', 'time_diff']]}, ballInFieldXY)

oneminute = TIMEWINDOW({size = 600000000000000, advance = 10000000000000}, map_parameters_for_computation)

no_interrupts = SELECT({PREDICATE='interruptions.interruption = false'}, System.interruptions)

streams_join = join(oneminute, no_interrupts)

///TODO: correct?!

out = AGGREGATE({group_by = ['sensorid'], aggregations=[['SUM', 'time_diff', 'COUNT_time', 'timestamp']]}, streams_join)