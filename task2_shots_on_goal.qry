#PARSER PQL
#DEFINE STARTTS 10748401988186756
#DEFINE OUTPUT \task1.csv
#DROPALLQUERIES
#QUERY

matchstart = SELECT({predicate = 'timestamp > 10753478619424000'}, soccergame)

included_metadata = ENRICH({minimumSize = 42, PREDICATE = RelationalPredicate('sensorid = sid')}, System.metadata, matchstart)

included_interruptions = join({predicate = 'timestamp >= start_interruption && timestamp <= end_interruption && playing == true', CARD = 'MANY_ONE'}, included_metadata, System.interruptions)

///remove referee and goalkeeper hands
without_referee = SELECT({predicate = 'entity_id != 21 && sensorid != 97 && sensorid != 98 && sensorid != 99 && sensorid != 100'}, included_interruptions)

///detect ball hits
///select where player and ball are in same area at same time
///ball and player are in same area at same time with 1m tolerance. ball changes acceleration
inFieldX = SELECT({predicate = 'sens_x > -50 && sens_x < 52489'}, without_referee)
inFieldXY = SELECT({predicate = 'sens_y > -33939 && sens_y < 33965'}, inFieldX)

ball_events = SELECT({predicate = 'entity = "Ball"'}, inFieldXY)
ball_events_projection = PROJECT({attributes = ['sid', 'timestamp', 'sens_x', 'sens_y', 'sens_z', 'sens_speed', 'accel', 'speed_x', 'speed_y', 'speed_x', 'accel_x', 'accel_y', 'accel_z']}, ball_events)
player_events = SELECT({predicate = 'entity != "Ball"'}, inFieldXY)
player_events_projection = PROJECT({attributes = ['entity', 'sensorid', 'team_id', 'timestamp', 'sens_x', 'sens_y', 'sens_z']}, player_events)
///maybe renaming timestampp to player_time or ball_hit_time
player_events_renaming = RENAME({aliases = ['name', 'player_id', 'team_id', 'timestampp', 'sensor_x', 'sensor_y', 'sensor_z']}, player_events_projection)


///search for timestamp by select loop to check every found value

///nur bälle ab hier

///timewindow of 1s from timestamp which does not move further, alternatively a select search with the interval of 1s
///alternative is probably better, and a third alternative would be maybe the coalesce operator

///aggregation of ball movement to compute acceleration >= 55 m/s^2
/// by adding the different acceleration values and compute an average?
/// does the direction count for this? probably not?! so just |a| converted to m/s^2 ?

///timewindow of 1,5s from timestamp
///really necessary?! see above line 21/22

///does ball fly to goal area
///check if the location values of the ball would be inside the goal area 
///check by extropolation of the acceleration values or by a simple straight-forward beaming of the ball without paying attention to ball movement
///not necessary

///does ball reach goal area within 1,5s
///select timestamp plus at maximum adding 1,5s, maybe instead the coalesce operator
///needs to check every value because it could be blocked before the 1,5s

///check if ball leaves field or can't hit goal area anymore due to direction change
///check if the field borders are crossed?! select probably doesn't work, maybe the coalesce operator?!
///check direction changes by detecting acceleration changes?!
///TODO: how to finish and go to the next goal shot?!
///TODO: more detailed specification

///select where player shoots on opponents goal
///TODO: specification (work with match side probably)
///spielfeldmitte ist bei y = 0
///ball_with_halfsides = join({predicate = 'timestamp >= halftime_start && timestamp <= halftime_end'}, ball_player_projection, System.goals)
///only_opponents_shots = SELECT({predicate = 'team_id = 1 && '}, halfside_joined)
